<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="employeeMapper">

<!-- 로그인 -->
<select id="selectEmployee" parameterType="hashmap" resultType="Employee">
	SELECT e.emp_no, e.email, e.pwd, e.name, e.intl_no, e.phone, e.profile, e.sign, e.join_date, e.resign_yn, e.resign_date, e.hr_yn, d.dept_no, d.dept_name, j.job_title, j.job_level, c.cp_no, c.cp_name
	FROM TB_EMPLOYEE  e
		JOIN TB_DEPARTMENT d on e.dept_no = d.dept_no
		JOIN TB_COMPANY c on d.cp_no = c.cp_no
		JOIN TB_JOB_TITLE j using (job_title_no)
	where email=#{email} and pwd=#{pwd}
</select>

<!-- 자동 로그인 설정 -->
<update id="autologin" parameterType="hashmap">
	update TB_EMPLOYEE set sessionKey = #{sessionId}, sessionLimit = #{next} 
	where email=#{email}
</update>

<select id="checkSessionKey" parameterType="string" resultType="Employee">        
	select * from TB_EMPLOYEE 
	where sessionKey = #{sessionId} and sessionLimit > now()    
</select>

<!-- 바밀번호 찾기 -->
<select id="selectEmployeePwd" parameterType="hashmap" resultType="Employee">
	select e.pwd
	from tb_employee e
   		join tb_department d using (dept_no) 
    	join tb_company c on d.cp_no = c.cp_no
	where c.cp_name = #{cp_name}
    	and e.email = #{email}
    	and e.name = #{name}
</select>

<!-- 난수 insert -->
<insert id="insertRandomNum" parameterType="string">
	insert into tb_forjoin (email, random_num)
	values (#{email}, (select round(dbms_random.value()*1000000)+1 as RandomNum from dual))
</insert>

<!-- 난수 update -->
<update id="updateRandomNum" parameterType="string">
	update tb_forjoin
	set random_num = (select round(dbms_random.value()*1000000)+1 as RandomNum from dual)
	where email = #{email}
</update>

<!-- 난수 delete -->
<update id="deleteRandomNum" parameterType="string">
	delete from tb_forjoin
	where email = #{email}
</update>

<!-- 난수 select -->
<select id="selectRandomNum" parameterType="string" resultType="string">
	select random_num 
	from tb_forjoin
	where email = #{email}
</select>

<!-- 프로필 사진 update -->
<update id="updateEmployeeProfile" parameterType="hashmap">
	update tb_employee
	set profile = #{profile}
	where emp_no = #{emp_no}
</update>

<!-- 서명 update -->
<update id="updateEmployeeSign" parameterType="hashmap">
	update tb_employee
	set sign = #{sign}
	where emp_no = #{emp_no}
</update>

<!-- 비밀번호 update -->
<update id="updateEmployeePwd" parameterType="hashmap">
	update tb_employee
	set pwd = #{pwd}
	where emp_no = #{emp_no}
</update>

<!-- 비밀번호 찾기용 update -->
<update id="updateFindPwd" parameterType="hashmap">
	update tb_employee
	set pwd = #{pwd}
    where email = #{email}
</update>

<!-- 이메일 중복 체크 -->
<select id="checkEmail" parameterType="string" resultType="string">
	select email from tb_employee where email=#{cp_join_email}
	union all
	select cp_join_email from tb_company where cp_join_email=#{cp_join_email}
</select>

</mapper>