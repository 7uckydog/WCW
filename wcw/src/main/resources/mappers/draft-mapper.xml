<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="draftMapper">

<!-- 직원 리스트 select -->
<select id="selectEmployee" parameterType="_int" resultType="Employee">
	SELECT e.emp_no, e.email, e.pwd, e.name, e.intl_no, e.phone, e.sign, e.join_date, d.dept_no, d.dept_name, j.job_title_no, j.job_title, j.job_level
	FROM TB_EMPLOYEE e
		JOIN TB_DEPARTMENT d on e.dept_no = d.dept_no
		JOIN TB_COMPANY c on d.cp_no = c.cp_no
		JOIN TB_JOB_TITLE j on j.job_title_no = e.job_title_no
    where resign_yn = 'N' and c.cp_no = #{cp_no}
    order by job_level desc, name
</select>

<!-- 기안 insert -->
<insert id="insertDraft" parameterType="hashmap">
	insert all
		
		<if test='dr_sort == 1'> 
			into tb_draft (dr_no, ep_no, dr_sort, dr_result, dr_title, dr_content, dr_purpose, dr_date, dr_due_date, dr_comment) 
			values ((select nvl(max(dr_no),99)+1 from tb_draft), 
					#{ep_no}, #{dr_sort}, default, #{dr_title}, #{dr_content}, #{dr_purpose}, default, (SELECT (sysdate+14) FROM dual), #{dr_comment})
		</if>
		
		<if test='dr_sort == 2'> 
			into tb_draft (dr_no, ep_no, dr_sort, dr_result, dr_title, dr_content, dr_date, dr_due_date, dr_comment, dr_expect_date) 
			values ((select nvl(max(dr_no),99)+1 from tb_draft),
					#{ep_no}, #{dr_sort}, default, #{dr_title}, #{dr_content}, default, (SELECT (sysdate+14) FROM dual), #{dr_comment}, #{dr_expect_date})
		</if>
		
		<if test='dr_sort == 3'> 
			into tb_draft (dr_no, 
							ep_no, dr_sort, dr_result, dr_title, dr_content, dr_date, dr_due_date) 
			values ((select nvl(max(dr_no),99)+1 from tb_draft),
					#{ep_no}, #{dr_sort}, default, #{dr_title}, #{dr_content}, default, (SELECT (sysdate+14) FROM dual))
			
			into tb_spend (dr_no, spend_date, spend_purpose, spend_content, spend_amount, spend_content_prvt, spend_amount_prvt, spend_sum)
			values ((select nvl(max(dr_no),99)+1 from tb_draft),
					#{spend_date}, #{spend_purpose}, #{spend_content}, #{spend_amount}, #{spend_content_prvt}, #{spend_amount_prvt}, #{spend_sum})
		</if>
		
			into tb_approval (appr_no, dr_no, emp_no, appr_order, appr_result)
			values ((select nvl(max(appr_no),0)+1 from tb_approval),
					(select nvl(max(dr_no),99)+1 from tb_draft),
					#{emp_no_1}, 1, 3)
					
		<if test='emp_no_2 != null &amp;&amp; !emp_no_2.equals("")'>
			into tb_approval (appr_no, dr_no, emp_no, appr_order, appr_result)
			values ((select nvl(max(appr_no),0)+2 from tb_approval),
					(select nvl(max(dr_no),99)+1 from tb_draft),
					#{emp_no_2}, 2, 4)
		</if>	
		<if test='emp_no_3 != null &amp;&amp; !emp_no_3.equals("")'>
			into tb_approval (appr_no, dr_no, emp_no, appr_order, appr_result)
			values ((select nvl(max(appr_no),0)+3 from tb_approval),
					(select nvl(max(dr_no),99)+1 from tb_draft),
					#{emp_no_3}, 3, 4)
		</if>		
	
	select * from dual
</insert>

<!-- 기안함 리스트 -->
<select id="selectListDraft" parameterType="_int" resultType="Draft">
	select dr_no, dr_sort, dr_title, dr_date, dr_due_date, dr_result
	from tb_draft
	where ep_no = #{ep_no}
	order by dr_date desc
</select>

<!-- 결재함 리스트 -->
<select id="selectListAppr" parameterType="_int" resultType="Draft">
	select d.dr_no, d.dr_sort, d.dr_title, a.emp_no, e2.name name_a, d.dr_due_date, d.dr_date, a.appr_result, d.dr_result
	from tb_draft d join tb_approval a on a.dr_no = d.dr_no
                    join tb_employee e on e.emp_no = a.emp_no
                    join tb_employee e2 on e2.emp_no = d.ep_no
	where a.emp_no = #{emp_no} and (a.appr_result = 1 or a.appr_result = 2 or a.appr_result = 3)
	order by dr_date desc
</select>

<!-- 기안 정보 (상세보기용)-->
<select id="selectDraft" parameterType="hashmap" resultType="Draft">
	<if test="dr_sort == 3">
		select t1.*, te1.name name_a, td1.dept_name dept_name_a, jt1.job_title job_title_a
	    from
	    (
		    select d.dr_no, d.ep_no, d.dr_sort, d.dr_result, d.dr_title, d.dr_content, d.dr_purpose, 
		    d.dr_date, d.dr_due_date, d.dr_comment, d.dr_expect_date, d.dr_amount, s.spend_date, s.spend_purpose, 
		    s.spend_content, s.spend_amount, s.spend_amount_prvt, s.spend_content_prvt, s.spend_sum, a.appr_no, 
		    a.emp_no, a.appr_order, a.appr_result, a.appr_date, e.name, e.sign, j.job_title
		    
		    from tb_draft d join tb_spend s on d.dr_no = s.dr_no
		                    join tb_approval a on d.dr_no = a.dr_no
		                    join tb_employee e on a.emp_no = e.emp_no
		                    join tb_job_title j on e.job_title_no = j.job_title_no
		                    join tb_department d1 on e.dept_no = d1.dept_no
		    where d.dr_no =#{dr_no}
	                             
	    ) t1
		    join tb_employee te1 on t1.ep_no = te1.emp_no
		    join tb_department td1 on te1.dept_no = td1.dept_no
		    join tb_job_title jt1 on te1.job_title_no = jt1.job_title_no
	    order by appr_order
	</if>
	<if test="dr_sort == 1 or dr_sort == 2">
		select t1.*, te1.name name_a, td1.dept_name dept_name_a, jt1.job_title job_title_a
	    from
	    (
		    select d.dr_no, d.ep_no, d.dr_sort, d.dr_result, d.dr_title, d.dr_content, d.dr_purpose, 
		    d.dr_date, d.dr_due_date, d.dr_comment, d.dr_expect_date, d.dr_amount, a.appr_no, 
		    a.emp_no, a.appr_order, a.appr_result, a.appr_date, e.name, e.sign, j.job_title
		    
		    from tb_draft d join tb_approval a on d.dr_no = a.dr_no
		                    join tb_employee e on a.emp_no = e.emp_no
		                    join tb_job_title j on e.job_title_no = j.job_title_no
		                    join tb_department d1 on e.dept_no = d1.dept_no
		    where d.dr_no = #{dr_no}                           
	    ) t1
	    	join tb_employee te1 on t1.ep_no = te1.emp_no
		    join tb_department td1 on te1.dept_no = td1.dept_no
		    join tb_job_title jt1 on te1.job_title_no = jt1.job_title_no
	    order by appr_order
	</if>
</select>

<!-- 기안 삭제 -->
<delete id="deleteDraft1" parameterType="hashmap">
	delete from tb_spend
	where dr_no = #{dr_no}
</delete>
<delete id="deleteDraft2" parameterType="hashmap">
	delete from tb_approval
	where dr_no = #{dr_no}
</delete>
<delete id="deleteDraft3" parameterType="hashmap">
	delete from tb_draft
	where dr_no = #{dr_no} and ep_no = #{ep_no}
</delete>

<!-- 기안의 결재 단계 확인 -->
<select id="checkApproval" parameterType="_int" resultType="_int">
	select count(*) cnt from tb_approval where dr_no =#{dr_no}
</select>

<!-- 결재자의 결재 순서 확인 -->
<select id="checkApprOrder" parameterType="hashmap" resultType="_int">
	select appr_order
    from tb_approval
    where dr_no = #{dr_no} and emp_no = ${emp_no}
</select>

<!-- 기안 승인: 결재자 부분-->
<update id="updateTbApproval1" parameterType="map">
		update tb_approval
        set appr_result = case
        					<if test="cnt == 1">
        						when appr_order = #{apprOrder} then 1
        					</if>
        					<if test="cnt == 2 and apprOrder == 1">
        						when appr_order = #{apprOrder} then 1
								when appr_order = #{apprOrder}+1 then 3
        					</if>
        					<if test="cnt == 2 and apprOrder == 2">
        						when appr_order = #{apprOrder}-1 then 1
        						when appr_order = #{apprOrder} then 1
        					</if>
        					<if test="cnt == 3 and apprOrder == 1">
        						when appr_order = #{apprOrder} then 1
								when appr_order = #{apprOrder}+1 then 3
								when appr_order = #{apprOrder}+2 then 4
        					</if>
        					<if test="cnt == 3 and apprOrder == 2">
        						when appr_order = #{apprOrder}-1 then 1
        						when appr_order = #{apprOrder} then 1
								when appr_order = #{apprOrder}+1 then 3
        					</if>
        					<if test="cnt == 3 and apprOrder == 3">
        						when appr_order = #{apprOrder}-2 then 1
        						when appr_order = #{apprOrder}-1 then 1
        						when appr_order = #{apprOrder} then 1
        					</if>
                          end
            , appr_date = case
            				<if test="cnt == 1">
        						when appr_order = #{apprOrder} then sysdate
        					</if>
        					<if test="cnt == 2 and apprOrder == 1">
        						when appr_order = #{apprOrder} then sysdate
								when appr_order = #{apprOrder}+1 then null
        					</if>
        					<if test="cnt == 2 and apprOrder == 2">
        						when appr_order = #{apprOrder}-1 then sysdate
        						when appr_order = #{apprOrder} then sysdate
        					</if>
        					<if test="cnt == 3 and apprOrder == 1">
        						when appr_order = #{apprOrder} then sysdate
								when appr_order = #{apprOrder}+1 then null
								when appr_order = #{apprOrder}+2 then null
        					</if>
        					<if test="cnt == 3 and apprOrder == 2">
        						when appr_order = #{apprOrder}-1 then sysdate
        						when appr_order = #{apprOrder} then sysdate
								when appr_order = #{apprOrder}+1 then null
        					</if>
        					<if test="cnt == 3 and apprOrder == 3">
        						when appr_order = #{apprOrder}-2 then sysdate
        						when appr_order = #{apprOrder}-1 then sysdate
        						when appr_order = #{apprOrder} then sysdate
        					</if>
                          end
        where dr_no = #{dr_no}
</update>

<!-- 기안 승인: 기안 부분-->
<update id="updateTbApproval2" parameterType="map">
	<if test="cnt == 1">
		update tb_draft
   		set dr_result = 2
   		where dr_no = #{dr_no}
	</if>
	
	<if test="cnt == 2 and apprOrder == 1">
		update tb_draft
   		set dr_result = 1
   		where dr_no = #{dr_no}
	</if>
	<if test="cnt == 2 and apprOrder == 2">
		update tb_draft
   		set dr_result = 2
   		where dr_no = #{dr_no}
	</if>
	
	<if test="cnt == 3 and apprOrder == 1">
		update tb_draft
   		set dr_result = 1
   		where dr_no = #{dr_no}
	</if>
	<if test="cnt == 3 and apprOrder == 3">
		update tb_draft
   		set dr_result = 2
   		where dr_no = #{dr_no}
	</if>
</update>

<!-- 기안 반려: 결재자 부분-->
<update id="updateTbApproval3" parameterType="map">
		update tb_approval
        set appr_result = case
        					<if test="cnt == 1">
        						when appr_order = #{apprOrder} then 2
        					</if>
        					<if test="cnt == 2 and apprOrder == 1">
        						when appr_order = #{apprOrder} then 2
								when appr_order = #{apprOrder}+1 then 4
        					</if>
        					<if test="cnt == 2 and apprOrder == 2">
        						when appr_order = #{apprOrder}-1 then 1
        						when appr_order = #{apprOrder} then 2
        					</if>
        					<if test="cnt == 3 and apprOrder == 1">
        						when appr_order = #{apprOrder} then 2
								when appr_order = #{apprOrder}+1 then 4
								when appr_order = #{apprOrder}+2 then 4
        					</if>
        					<if test="cnt == 3 and apprOrder == 2">
        						when appr_order = #{apprOrder}-1 then 1
        						when appr_order = #{apprOrder} then 2
								when appr_order = #{apprOrder}+1 then 4
        					</if>
        					<if test="cnt == 3 and apprOrder == 3">
        						when appr_order = #{apprOrder}-2 then 1
        						when appr_order = #{apprOrder}-1 then 1
        						when appr_order = #{apprOrder} then 2
        					</if>
                          end
        where dr_no = #{dr_no}
</update>

<!-- 기안 반려: 기안 부분-->
<update id="updateTbApproval4" parameterType="_int">
	update tb_draft
   	set dr_result = 4
   	where dr_no = #{dr_no}
</update>


</mapper>